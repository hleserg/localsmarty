#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import sys
import asyncio
import logging
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å Python
src_path = Path(__file__).parent / "src"
sys.path.insert(0, str(src_path))

from utils.logger import log_message, log_response, log_info, log_error

class MockTelegramBot:
    """–ú–æ–∫-–≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.running = False
        self.message_count = 0
        
    async def start_polling(self):
        """–ò–º–∏—Ç–∞—Ü–∏—è polling —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        log_info("ü§ñ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        log_info("üìù –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
        log_info("üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
        log_info("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        self.running = True
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
        demo_messages = [
            {
                "chat_id": 123456789,
                "user_id": 987654321,
                "username": "demo_user",
                "message_type": "COMMAND",
                "content": "/start",
                "message_id": 1
            },
            {
                "chat_id": 123456789,
                "user_id": 987654321,
                "username": "demo_user",
                "message_type": "TEXT",
                "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
                "message_id": 2
            },
            {
                "chat_id": 123456789,
                "user_id": 987654321,
                "username": "demo_user",
                "message_type": "TEXT",
                "content": "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ",
                "message_id": 3
            },
            {
                "chat_id": 123456789,
                "user_id": 987654321,
                "username": "demo_user",
                "message_type": "COMMAND",
                "content": "/help",
                "message_id": 4
            },
            {
                "chat_id": 123456789,
                "user_id": 987654321,
                "username": "demo_user",
                "message_type": "VOICE",
                "content": "Voice message, duration: 3s, file_id: demo_voice_123",
                "message_id": 5
            }
        ]
        
        print("\n" + "="*60)
        print("üì® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –í–•–û–î–Ø–©–ò–• –°–û–û–ë–©–ï–ù–ò–ô")
        print("="*60)
        
        for i, msg in enumerate(demo_messages, 1):
            if not self.running:
                break
                
            print(f"\nüì© –°–æ–æ–±—â–µ–Ω–∏–µ {i}: {msg['message_type']} - {msg['content'][:30]}...")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            log_message(**msg)
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            await asyncio.sleep(1)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            log_response(msg['chat_id'], "TEXT", True)
            print(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            
            await asyncio.sleep(2)
        
        print("\n" + "="*60)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
        print("="*60)
        print(f"üì® –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(demo_messages)}")
        print(f"üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É: logs/")
        print(f"üìÑ messages.log - –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print(f"üìÑ combined.log - –æ–±—â–∏–µ –ª–æ–≥–∏")
        print(f"üìÑ error.log - –æ—à–∏–±–∫–∏")
        
        print("\nüîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–∞—Ö:")
        try:
            with open("logs/messages.log", "r", encoding="utf-8") as f:
                lines = f.readlines()
                for line in lines[-3:]:
                    print(f"   {line.strip()}")
        except FileNotFoundError:
            print("   –õ–æ–≥–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã")
        
        print("\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:")
        print("   1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather")
        print("   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Yandex Cloud API")
        print("   3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ .env —Ñ–∞–π–ª")
        print("   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python run_local.py")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Telegram –±–æ—Ç–∞")
    print("üìù –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫–µ logs/")
    print("-" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
    log_dir = Path("logs")
    log_dir.mkdir(exist_ok=True)
    
    bot = MockTelegramBot()
    
    try:
        await bot.start_polling()
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
