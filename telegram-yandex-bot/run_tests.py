#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ Telegram –±–æ—Ç–∞.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ–∂–∏–º—ã –∑–∞–ø—É—Å–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç webhook —Ç–µ—Å—Ç—ã –ª–æ–∫–∞–ª—å–Ω–æ.
"""
import os
import sys
import subprocess
import argparse
from pathlib import Path


def check_webhook_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ webhook –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""
    webhook_url = os.getenv('WEBHOOK_URL', '')
    return (
        webhook_url and
        webhook_url.startswith('https://') and
        'localhost' not in webhook_url and
        '127.0.0.1' not in webhook_url
    )


def run_tests(marker=None, verbose=False, coverage=False, slow=False, webhook=False):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    cmd = ['python', '-m', 'pytest']
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
    if marker:
        cmd.extend(['-m', marker])
    
    # –î–æ–±–∞–≤–ª—è–µ–º verbose —Ä–µ–∂–∏–º
    if verbose:
        cmd.append('-v')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞
    if coverage:
        cmd.extend(['--cov=src', '--cov-report=html', '--cov-report=term'])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    if slow:
        cmd.extend(['-m', 'slow'])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if webhook:
        if not check_webhook_environment():
            print("‚ö†Ô∏è  Webhook —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã - webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã")
            print("   –î–ª—è –∑–∞–ø—É—Å–∫–∞ webhook —Ç–µ—Å—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
            print("   - WEBHOOK_URL (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS –∏ –Ω–µ localhost)")
            print("   - WEBHOOK_PORT")
            print("   - WEBHOOK_PATH")
            print("   - WEBHOOK_SECRET_TOKEN")
            return False
        else:
            print("‚úÖ Webhook –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º webhook —Ç–µ—Å—Ç—ã")
    else:
        print("‚ÑπÔ∏è  Webhook —Ç–µ—Å—Ç—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    try:
        result = subprocess.run(cmd, cwd=Path(__file__).parent)
        return result.returncode == 0
    except FileNotFoundError:
        print("‚ùå pytest –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: pip install pytest")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    parser = argparse.ArgumentParser(description='–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Telegram –±–æ—Ç–∞')
    
    parser.add_argument(
        '--marker', '-m',
        choices=['unit', 'integration', 'services', 'handlers', 'utils', 'config', 'models', 'webhook'],
        help='–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –º–∞—Ä–∫–µ—Ä–æ–º'
    )
    
    parser.add_argument(
        '--verbose', '-v',
        action='store_true',
        help='–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥'
    )
    
    parser.add_argument(
        '--coverage', '-c',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞'
    )
    
    parser.add_argument(
        '--slow',
        action='store_true',
        help='–í–∫–ª—é—á–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã'
    )
    
    parser.add_argument(
        '--webhook',
        action='store_true',
        help='–ó–∞–ø—É—Å—Ç–∏—Ç—å webhook —Ç–µ—Å—Ç—ã (—Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)'
    )
    
    parser.add_argument(
        '--all',
        action='store_true',
        help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã –≤–∫–ª—é—á–∞—è –º–µ–¥–ª–µ–Ω–Ω—ã–µ'
    )
    
    args = parser.parse_args()
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞
    marker = args.marker
    verbose = args.verbose
    coverage = args.coverage
    slow = args.slow or args.all
    webhook = args.webhook
    
    # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –º–∞—Ä–∫–µ—Ä, –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
    if not marker and not args.all:
        marker = None
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = run_tests(marker, verbose, coverage, slow, webhook)
    
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        if coverage:
            print("üìä –û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Å–æ–∑–¥–∞–Ω –≤ htmlcov/index.html")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)


if __name__ == '__main__':
    main()

