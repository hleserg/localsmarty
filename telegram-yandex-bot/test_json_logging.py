#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ JSON –≤—Ö–æ–¥—è—â–∏—Ö updates
"""

import os
import sys
import asyncio
import logging
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å Python
src_path = Path(__file__).parent / "src"
sys.path.insert(0, str(src_path))

from utils.logger import log_update_json, log_info, log_error

class JSONLoggingTest:
    """–¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è JSON updates"""
    
    def __init__(self):
        self.running = False
        
    async def simulate_telegram_updates(self):
        """–ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö Telegram updates –≤ –≤–∏–¥–µ JSON"""
        log_info("üß™ –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ JSON –≤—Ö–æ–¥—è—â–∏—Ö updates")
        log_info("üìù –í—Å–µ updates –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ logs/updates.json")
        log_info("üí¨ –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö Telegram updates")
        
        self.running = True
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã updates
        updates = [
            {
                "update_id": 123456789,
                "message": {
                    "message_id": 1,
                    "from": {
                        "id": 987654321,
                        "is_bot": False,
                        "first_name": "–ò–≤–∞–Ω",
                        "last_name": "–ü–µ—Ç—Ä–æ–≤",
                        "username": "ivan_petrov",
                        "language_code": "ru"
                    },
                    "chat": {
                        "id": 123456789,
                        "first_name": "–ò–≤–∞–Ω",
                        "last_name": "–ü–µ—Ç—Ä–æ–≤",
                        "username": "ivan_petrov",
                        "type": "private"
                    },
                    "date": 1694567890,
                    "text": "/start"
                }
            },
            {
                "update_id": 123456790,
                "message": {
                    "message_id": 2,
                    "from": {
                        "id": 987654321,
                        "is_bot": False,
                        "first_name": "–ò–≤–∞–Ω",
                        "last_name": "–ü–µ—Ç—Ä–æ–≤",
                        "username": "ivan_petrov",
                        "language_code": "ru"
                    },
                    "chat": {
                        "id": 123456789,
                        "first_name": "–ò–≤–∞–Ω",
                        "last_name": "–ü–µ—Ç—Ä–æ–≤",
                        "username": "ivan_petrov",
                        "type": "private"
                    },
                    "date": 1694567895,
                    "text": "–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø—Ä–æ GPT-5"
                }
            },
            {
                "update_id": 123456791,
                "message": {
                    "message_id": 3,
                    "from": {
                        "id": 555666777,
                        "is_bot": False,
                        "first_name": "–ê–Ω–Ω–∞",
                        "last_name": "–°–∏–¥–æ—Ä–æ–≤–∞",
                        "username": "anna_sidorova",
                        "language_code": "ru"
                    },
                    "chat": {
                        "id": 555666777,
                        "first_name": "–ê–Ω–Ω–∞",
                        "last_name": "–°–∏–¥–æ—Ä–æ–≤–∞",
                        "username": "anna_sidorova",
                        "type": "private"
                    },
                    "date": 1694567900,
                    "text": "–í —á—ë–º —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏?"
                }
            },
            {
                "update_id": 123456792,
                "message": {
                    "message_id": 4,
                    "from": {
                        "id": 888999000,
                        "is_bot": False,
                        "first_name": "–¢–µ—Ö–Ω–∏–∫",
                        "last_name": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
                        "username": "tech_dev",
                        "language_code": "ru"
                    },
                    "chat": {
                        "id": 888999000,
                        "first_name": "–¢–µ—Ö–Ω–∏–∫",
                        "last_name": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
                        "username": "tech_dev",
                        "type": "private"
                    },
                    "date": 1694567905,
                    "voice": {
                        "duration": 4,
                        "mime_type": "audio/ogg",
                        "file_id": "BAADBAADrwADBREAAYag8VYhAQABAg",
                        "file_unique_id": "AgADBREAAYag8VY",
                        "file_size": 12345
                    }
                }
            },
            {
                "update_id": 123456793,
                "message": {
                    "message_id": 5,
                    "from": {
                        "id": 111222333,
                        "is_bot": False,
                        "first_name": "–ì—Ä—É–ø–ø–∞",
                        "last_name": "–¢–µ—Å—Ç",
                        "username": "test_group",
                        "language_code": "ru"
                    },
                    "chat": {
                        "id": -1001234567890,
                        "title": "–¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞",
                        "type": "group",
                        "all_members_are_administrators": True
                    },
                    "date": 1694567910,
                    "text": "–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ"
                }
            },
            {
                "update_id": 123456794,
                "callback_query": {
                    "id": "1234567890123456789",
                    "from": {
                        "id": 987654321,
                        "is_bot": False,
                        "first_name": "–ò–≤–∞–Ω",
                        "last_name": "–ü–µ—Ç—Ä–æ–≤",
                        "username": "ivan_petrov",
                        "language_code": "ru"
                    },
                    "message": {
                        "message_id": 6,
                        "from": {
                            "id": 8001242722,
                            "is_bot": True,
                            "first_name": "Test Bot",
                            "username": "test_bot"
                        },
                        "chat": {
                            "id": 123456789,
                            "first_name": "–ò–≤–∞–Ω",
                            "last_name": "–ü–µ—Ç—Ä–æ–≤",
                            "username": "ivan_petrov",
                            "type": "private"
                        },
                        "date": 1694567915,
                        "text": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        "reply_markup": {
                            "inline_keyboard": [
                                [
                                    {
                                        "text": "–ö–Ω–æ–ø–∫–∞ 1",
                                        "callback_data": "button_1"
                                    },
                                    {
                                        "text": "–ö–Ω–æ–ø–∫–∞ 2",
                                        "callback_data": "button_2"
                                    }
                                ]
                            ]
                        }
                    },
                    "chat_instance": "1234567890123456789",
                    "data": "button_1"
                }
            }
        ]
        
        print("\n" + "="*80)
        print("üß™ –¢–ï–°–¢ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –ü–û–õ–ù–û–ì–û JSON UPDATES")
        print("="*80)
        
        total_updates = 0
        
        for i, update in enumerate(updates, 1):
            if not self.running:
                break
                
            total_updates += 1
            
            print(f"\nüì® Update {i}:")
            print(f"   üÜî Update ID: {update['update_id']}")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø update
            if 'message' in update:
                if 'text' in update['message']:
                    print(f"   üí¨ –¢–∏–ø: TEXT —Å–æ–æ–±—â–µ–Ω–∏–µ")
                    print(f"   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {update['message']['text'][:50]}...")
                elif 'voice' in update['message']:
                    print(f"   üé§ –¢–∏–ø: VOICE —Å–æ–æ–±—â–µ–Ω–∏–µ")
                    print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {update['message']['voice']['duration']}—Å")
                else:
                    print(f"   üìé –¢–∏–ø: –î—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            elif 'callback_query' in update:
                print(f"   üîò –¢–∏–ø: CALLBACK QUERY")
                print(f"   üìù –î–∞–Ω–Ω—ã–µ: {update['callback_query']['data']}")
            else:
                print(f"   ‚ùì –¢–∏–ø: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π update")
            
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.get('message', update.get('callback_query', {}).get('message', {})).get('from', {}).get('username', 'Unknown')}")
            print(f"   üÜî Chat ID: {update.get('message', update.get('callback_query', {}).get('message', {})).get('chat', {}).get('id', 'Unknown')}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π JSON
            log_update_json(update)
            
            print(f"   ‚úÖ JSON –∑–∞–ø–∏—Å–∞–Ω –≤ logs/updates.json")
            
            await asyncio.sleep(0.5)
        
        print("\n" + "="*80)
        print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–ï–°–¢–ê JSON –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
        print("="*80)
        print(f"üì® –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ updates: {total_updates}")
        print(f"üí¨ –¢–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {sum(1 for u in updates if 'message' in u and 'text' in u['message'])}")
        print(f"üé§ –ì–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {sum(1 for u in updates if 'message' in u and 'voice' in u['message'])}")
        print(f"üîò Callback queries: {sum(1 for u in updates if 'callback_query' in u)}")
        print(f"üìÅ JSON —Ñ–∞–π–ª: logs/updates.json")
        print(f"‚úÖ –û—à–∏–±–æ–∫: 0")
        
        print("\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–æ–≥–æ–≤:")
        print("   üìÑ logs/updates.json - –ø–æ–ª–Ω—ã–µ JSON updates")
        print("   üìÑ logs/messages.log - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("   üìÑ logs/combined.log - –æ–±—â–∏–µ –ª–æ–≥–∏")
        print("   üìÑ logs/error.log - –æ—à–∏–±–∫–∏")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∏–∑ JSON –ª–æ–≥–∞
        print("\nüîç –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –≤ JSON –ª–æ–≥–µ:")
        try:
            with open("logs/updates.json", "r", encoding="utf-8") as f:
                content = f.read()
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
                lines = content.split('\n')
                json_blocks = []
                current_block = []
                for line in lines:
                    if line.strip() == '=' * 80:
                        if current_block:
                            json_blocks.append('\n'.join(current_block))
                        current_block = []
                    else:
                        current_block.append(line)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –±–ª–æ–∫–∞
                for block in json_blocks[-2:]:
                    if block.strip():
                        print(f"   üìù {block.strip()[:100]}...")
        except FileNotFoundError:
            print("   JSON –ª–æ–≥ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω")
        
        print("\n‚ú® –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è JSON updates —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üí° –í—Å–µ updates –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ø–æ–ª–Ω–æ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ!")
        print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª logs/updates.json –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö!")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ JSON updates")
    print("üìù –í—Å–µ –≤—Ö–æ–¥—è—â–∏–µ updates –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ logs/updates.json")
    print("üí¨ –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ Telegram updates")
    print("üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫–µ logs/")
    print("-" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
    log_dir = Path("logs")
    log_dir.mkdir(exist_ok=True)
    
    test = JSONLoggingTest()
    
    try:
        await test.simulate_telegram_updates()
    except KeyboardInterrupt:
        print("\nüõë –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
